<?php

/**
 * Implements hook_theme().
 */
function bhcc_campaign_theme($existing, $type, $theme, $path) {
  return [
    'campaign_navigation' => [
      'variables' => [
        'heading' => '',
        'links' => [],
        'parentURL' => ''
      ]
    ],
    'campaign_banner' => [
      'variables' => [
        'tag' => '',
        'heading' => '',
        'image' => ''
      ]
    ],
    'campaign_overview_banner' => [
      'variables' => [
        'heading' => '',
        'image' => ''
      ]
    ]
  ];
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function bhcc_campaign_node_insert(\Drupal\Core\Entity\EntityInterface $entity) {
  bhcc_campaign_node_update($entity);
}

/**
 * Implements hook_ENTITY_TYPE_update().
 *
 * When saving a guide singleton, we update the guide parent so it knows about
 * the new page.
 */
function bhcc_campaign_node_update(Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity instanceof \Drupal\bhcc_campaign\Node\CampaignSingleton) {
    /** @var \Drupal\bhcc_campaign\Node\CampaignMaster $parent */
    if ($parent = $entity->getParent()) {
      // Ensure this node is not linked to another parent.
      $query = Drupal::entityQuery('node')
        ->condition('type', 'campaign_overview')
        ->condition('nid', $parent->id(), '!=')
        ->condition('field_campaign_pages', $entity->id())
        ->execute();

      foreach ($query as $nid) {
        /** @var \Drupal\bhcc_campaign\Node\CampaignMaster $node */
        $node = \Drupal\node\Entity\Node::load($nid);

        $node->removeChild($entity);
        $node->save();
      }

      // Update the parent node.
      $parent->addChild($entity);
      $parent->save();
    }
    else {
      // Ensure this node is not linked to another parent.
      $query = Drupal::entityQuery('node')
        ->condition('type', 'campaign_overview')
        ->condition('field_campaign_pages', $entity->id())
        ->execute();

      foreach ($query as $nid) {
        /** @var \Drupal\bhcc_campaign\Node\CampaignMaster $node */
        $node = \Drupal\node\Entity\Node::load($nid);

        $node->removeChild($entity);
        $node->save();
      }
    }
  }
}
