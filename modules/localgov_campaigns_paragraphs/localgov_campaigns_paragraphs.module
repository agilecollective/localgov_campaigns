<?php

/**
 * @file
 * LocalGovDrupal Campaigns Paragraphs module file.
 */

use Drupal\Core\Url;
use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;

/**
 * Implements hook_theme().
 */
function localgov_campaigns_paragraphs_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__localgov_accordion' => [
      'template' => 'paragraph--localgov-accordion',
      'base hook' => 'paragraph',
    ],
    'paragraph__localgov_accordion_pane' => [
      'template' => 'paragraph--localgov-accordion-pane',
      'base hook' => 'paragraph',
    ],
    'paragraph__localgov_box_link' => [
      'template' => 'paragraph--localgov-box-link',
      'base hook' => 'paragraph',
    ],
    'paragraph__localgov_call_out_box' => [
      'template' => 'paragraph--localgov-call-out-box',
      'base hook' => 'paragraph',
    ],
    'paragraph__localgov_fact_box' => [
      'template' => 'paragraph--localgov-fact-box',
      'base hook' => 'paragraph',
    ],
    'paragraph__localgov_link_and_summary' => [
      'template' => 'paragraph--localgov-link-and-summary',
      'base hook' => 'paragraph',
    ],
    'paragraph__localgov_quote' => [
      'template' => 'paragraph--localgov-quote',
      'base hook' => 'paragraph',
    ],
    'paragraph__localgov_video' => [
      'template' => 'paragraph--localgov-video',
      'base hook' => 'paragraph',
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function localgov_campaigns_paragraphs_preprocess_paragraph(&$variables) {
  $variables['#attached']['library'][] = 'localgov_campaigns_paragraphs/localgov_campaigns_paragraphs';

  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = $variables['paragraph'];

  if ($paragraph->bundle() === 'localgov_box_link') {
    if (!$paragraph->get('localgov_link')->isEmpty()) {
      $link = $paragraph->get('localgov_link')->first()->getValue();
      $variables['localgov_link']['title'] = $link['title'];
      $variables['localgov_link']['url'] = Url::fromUri($link['uri']);
    }
  }

  if ($paragraph->bundle() === 'localgov_call_out_box') {
    if (!$paragraph->get('localgov_button')->isEmpty()) {
      $button = $paragraph->get('localgov_button')->first()->getValue();
      $variables['button_url'] = Url::fromUri($button['uri']);
    }
    if (!$paragraph->get('localgov_background_image')->isEmpty()) {
      $fid = $paragraph->get('localgov_background_image')->entity->field_media_image[0]->getValue()['target_id'];
      $file_url = File::load($fid)->getFileUri();
      $variables['background_url'] = ImageStyle::load('large_21_9')->buildUrl($file_url);
    }
  }

  if ($paragraph->bundle() === 'video_page_builder') {
    if (!$paragraph->get('field_video_url')->isEmpty()) {
      $video = $paragraph->get('field_video_url')->first()->getValue();
      $variables['field_video_url'] = $video['uri'];
    }
  }

  if ($paragraph->bundle() === 'localgov_accordion' || $paragraph->bundle() === 'localgov_accordion_pane') {
    if (!$paragraph->get('localgov_title')->isEmpty()) {
      $heading_text = $paragraph->get('localgov_title')->value;
      $heading_level = $paragraph->get('field_heading_level')->value;
      $variables['heading'] = _create_heading($heading_text, $heading_level);
    }
  }
}

/**
 * Create a heading element.
 *
 * @param string $heading_text
 * @param string $heading_level
 *
 * @return bool|array
 *   FALSE if heading_level is incorrect, heading element otherwise.
 */
function _create_heading(string $heading_text, string $heading_level) {
  $allowed_heading_levels = ['h2', 'h3', 'h4', 'h5', 'h6'];

  if (!in_array($heading_level, $allowed_heading_levels)) {
    return;
  }

  $heading = [
    '#type' => 'inline_template',
    '#template' => '<{{ level }}>{{ text }}</{{ level }}>',
    '#context' => [
      'level' => $heading_level,
      'text' => $heading_text,
    ],
  ];

  return $heading;
}
